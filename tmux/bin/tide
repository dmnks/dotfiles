#!/bin/bash

PROGRAM=$(basename $0)
CMD=$1; shift
ROOTDIR=$HOME/code
CACHEDIR=$HOME/.cache/tide
WORKTREE_FILE=$HOME/.cache/tide/worktrees

cmd_usage() {
    echo "\
Usage: $PROGRAM COMMAND [ARGS]

A simple tmux(1)-based "IDE" with git-worktree(1) and toolbox(1) integration.

Commands:
    open                select worktree from menu
    status [icon|line]  generate status bar (to use from ~/.tmux.conf)
"
    exit 1
}

cmd_open() {
    local name=$(echo "$1" | sed 's/\./-/g')
    name=$(basename $(dirname $name))/$(basename $name)

    if [ "$(basename $1)" == ".." ] || [ ! -d $1 ] || [ ! -e $1/.git ]; then
        echo >&2 "Not a git worktree, aborting"
        read
        return
    fi
    cd $1

    if ! tmux has-session -t="$name" 2>/dev/null; then
        tmux new-session -ds "$name" -n "Code" \
                         -x "$(tput cols)" -y "$(tput lines)" \
                         "sleep 0.1; vim -c GFiles"
        tmux new-window -t "$name" -n "Git" "tig"
        tmux split-window -t "$name" -h -l50 -d
        tmux new-window -t "$name" -n "Build"
        tmux split-window -t "$name" -h -d
        tmux new-window -t "$name" -n "Debug"
        tmux new-window -t "$name" -n "Manual"
        tmux split-window -t "$name" -h
        tmux select-window -t ${name}:+1
    fi

    if [ -z "$TMUX" ]; then
        tmux attach -t "$name"
    else
        tmux switch-client -t "$name"
    fi
    exit
}

cmd_status() {
    local cmd="$1"
    local session_name="$2"
    local session_path="$3"
    local pane_command="$4"

    print_branch() {
        cd "$session_path"
        git rev-parse --is-inside-work-tree >/dev/null || return 0
        printf "#[fg=#83a598]󰘬 $(git rev-parse --abbrev-ref HEAD)#[default]  "
    }

    print_repo() {
        cd "$session_path"
        git rev-parse --is-inside-work-tree >/dev/null || return 0
        printf " $(git rev-parse --path-format=absolute --git-common-dir | \
                    xargs dirname | xargs basename)  "
    }

    print_toolbox() {
        [ "$pane_command" == "toolbox" ] || return 0
        printf "#[fg=#d3869b]󰆧#[default]  "
    }

    case $cmd in
        icon)
            shift
            case "$1" in
                Code)   echo " " ;;
                Git)    echo "󰘬 " ;;
                Build)  echo " " ;;
                Debug)  echo " " ;;
                Manual) echo " " ;;
                Blame)  echo " " ;;
                Slack)  echo "󰒱 " ;;
                Mutt)   echo "󰇰 " ;;
                Plan)   echo " " ;;
                Dashboard)
                        echo "󰕮 " ;;
                bash)   echo " " ;;
                *)      echo " " ;;
            esac
        ;;
        line)
            print_toolbox
            print_branch
            print_repo
        ;;
    esac
}

case $CMD in
    open)               cmd_open "$@" ;;
    status)             cmd_status "$@" ;;
    *)                  cmd_usage ;;
esac
