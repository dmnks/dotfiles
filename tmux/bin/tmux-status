#!/bin/bash

print_branch() {
    cd "$SESSION_PATH"
    git rev-parse --is-inside-work-tree >/dev/null || return 0
    printf "#[fg=#83a598]󰘬 $(git rev-parse --abbrev-ref HEAD)#[default]  "
}

print_toolbox() {
    local name=$(echo "$SESSION_NAME" | sed 's/\//-/')
    podman container exists "$name" || return 0
    local color
    if [ "$PANE_COMMAND" == "toolbox" ]; then
        color='#d3869b'
    else
        color='#928374'
    fi
    local pfx=".Config.Labels"
    local key="#[fg=${color}]󰆧 {{${pfx}.name}}-{{${pfx}.version}}#[default]  "
    printf "$(podman inspect --format "$key" "$name")"
}

print_test() {
    local name=".testsuite.log"
    cd "$SESSION_PATH"
    [ -e "$name" ] || return 0
    if grep -qe '\(was\|were\) successful\.' \
            -qe 'behaved as expected\.' "$name"; then
        printf "#[fg=#98971a]#[default]  "
    elif grep -q 'failed' "$name"; then
        printf "#[fg=#cc241d]#[default]  "
    elif ! grep -q 'bailing out' "$name"; then
        printf "#[fg=#d79921]#[default]  "
    fi
}

CMD="$1"
SESSION_NAME="$2"
SESSION_PATH="$3"
PANE_COMMAND="$4"

case $CMD in
    icon)
        shift
        name="$1"
        case "$name" in
            code)   echo " " ;;
            git)    echo "󰘬 " ;;
            build)  echo " " ;;
            debug)  echo " " ;;
            bash)   echo " " ;;
            slack)  echo "󰒱 " ;;
            mutt)   echo "󰇰 " ;;
            plan)   echo " " ;;
            man)    echo " " ;;
            *)      echo "" ;;
        esac
    ;;
    overview)
        print_test
        print_branch
        print_toolbox
    ;;
esac
