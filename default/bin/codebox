#!/bin/bash

PROGNAME="codebox"

usage() {
    echo "\
Usage: $PROGNAME COMMAND [ARGS]

Simple development environment within the current directory (a "project").

Define your Dockerfiles in ~/.config/$PROGNAME/images/Dockerfile.PROJECT
(replacing PROJECT with a directory name).

Commands:
    build       build a box image
    create      create a new box
    enter       attach to a box
    ls          list all boxes
    rm          remove a box"
    exit 1
}

CONFDIR="$HOME/.config/$PROGNAME"
PROJECT="$(basename $PWD)"
NAME="$PROGNAME-$PROJECT"

ensure_box_exists() {
    if ! podman container exists $NAME; then
        >&2 echo "No box has been created here yet."
        >&2 echo "Use: $PROGNAME create"
        exit 1
    fi
}

ensure_no_box_exists() {
    if podman container exists $NAME; then
        >&2 echo "Box already exists here."
        >&2 echo "Use: $PROGNAME enter"
        exit 1
    fi
}

CMD=$1
OPT=$2
if [ -z "$CMD" ]; then
    usage
elif [ "$CMD" == "build" ]; then
    DOCKERFILE="$CONFDIR/images/Dockerfile.$PROJECT"
    if [ ! -f "$DOCKERFILE" ]; then
        >&2 echo "No Dockerfile defined for this project."
        >&2 echo "Create one at: $DOCKERFILE"
        exit 1
    fi
    podman build $@ -t $NAME -f $DOCKERFILE .
elif [ "$CMD" == "create" ]; then
    ensure_no_box_exists
    if ! podman image exists $NAME; then
        >&2 echo "No image exists here."
        >&2 echo "Use: $PROGNAME build"
        exit 1
    fi
    podman create \
         -e TERM -it \
         -v=$PWD:$PWD \
         -v=$HOME/.bashrc:/root/.bashrc:ro \
         --workdir $PWD \
         --name $NAME \
         --hostname $PROGNAME \
         --network host \
         $OPT \
         -it $NAME >/dev/null
    chcon -R -t container_file_t $PWD $HOME/.bashrc
    echo "Box created."
    echo "Enter with: $PROGNAME enter"
elif [ "$CMD" == "enter" ]; then
    ensure_box_exists
    podman start $NAME >/dev/null
    podman attach --detach-keys="ctrl-@" $NAME
elif [ "$CMD" == "ls" ]; then
    podman ps -a --format '{{.Names}}' | egrep "^$NAME"
elif [ "$CMD" == "rm" ]; then
    ensure_box_exists
    podman rm -f $NAME >/dev/null
else
    usage
fi

exit 0
